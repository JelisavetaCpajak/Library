{"ast":null,"code":"var _jsxFileName = \"/Users/jelisavetacpajak/Documents/react-searchBooksApp/my-app/src/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Paper, Card, CardContent, Typography, CardActions, Button, TablePagination } from \"@material-ui/core\";\nimport ReactPaginate from \"react-paginate\";\nimport classes from \"./Search.css\";\nimport Book from \"./Book/Book\";\nimport { Link } from \"react-router-dom\";\nimport * as actionTypes from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchingTerm: \"\",\n      noResult: false,\n      books: [],\n      start: true,\n      message: \"\",\n      pageNums: 0\n    };\n\n    this.setSearchingTerm = value => {\n      this.setState({\n        searchingTerm: value\n      });\n      console.log(\"term: \", this.state.searchingTerm);\n    };\n\n    this.searchForBook = () => {\n      let term = this.state.searchingTerm;\n      this.setState({\n        start: false,\n        message: \"wait...\"\n      }); //str.replace(\"Microsoft\", \"W3Schools\");\n\n      term.replace(\" \", \"+\");\n      let url = \"http://openlibrary.org/search.json?q=\" + term + \"/\";\n      axios.get(url).then(response => {\n        console.log(\"search->response: \", response);\n\n        if (response.data.docs.length == 0) {\n          console.log(\"array empty\");\n          this.setState({\n            noResult: true,\n            message: \"NO RESULTS\"\n          });\n        }\n\n        console.log(\"response: \", response.data.docs);\n        let array = response.data.docs.slice(0, 15);\n        let pgs = array.length / 10; // if (array.length % 10 > 0) {\n        //   pgs++;\n        // }\n        //list.slice(0, size)\n\n        this.setState({\n          noResult: false,\n          pageNums: pgs\n        });\n        this.props.setBooks(array);\n      }).catch(error => {\n        console.log(\"search->error: \", error);\n        this.setState({\n          noResult: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    let books_from_red = this.props.books;\n    this.setState({\n      books: books_from_red\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  render() {\n    let content = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Insert title\",\n        variant: \"outlined\",\n        onChange: event => this.setSearchingTerm(event.target.value),\n        value: this.state.searchingTerm,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.searchForBook,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), this.state.start ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Wellcome! Please enter book title you want to find.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : this.state.books.length != 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Found books:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          children: this.state.books.map(book => {\n            console.log(\"book: \", book.title); // <p>res:{book.title}</p>;\n\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/book\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.Root,\n                children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.Title,\n                    color: \"textSecondary\",\n                    gutterBottom: true,\n                    children: [\"First year of publish: \", book.first_publish_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    component: \"h2\",\n                    children: book.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.pos,\n                    color: \"textSecondary\",\n                    children: [\"Type: \", book.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"p\",\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 27\n                    }, this), \"Author: \", book.author_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    children: \"Learn More\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)]\n              }, book.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this); //content.push(b);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setBooks: books => dispatch({\n      type: actionTypes.SET_BOOKS,\n      books: books\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/jelisavetacpajak/Documents/react-searchBooksApp/my-app/src/Search/Search.js"],"names":["React","Component","axios","TextField","Paper","Card","CardContent","Typography","CardActions","Button","TablePagination","ReactPaginate","classes","Book","Link","actionTypes","connect","Search","state","searchingTerm","noResult","books","start","message","pageNums","setSearchingTerm","value","setState","console","log","searchForBook","term","replace","url","get","then","response","data","docs","length","array","slice","pgs","props","setBooks","catch","error","componentDidMount","books_from_red","componentDidUpdate","render","content","event","target","map","book","title","Root","Title","first_publish_year","pos","type","author_name","key","mapStateToProps","mapDispatchToProps","dispatch","SET_BOOKS"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  Paper,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  TablePagination,\n} from \"@material-ui/core\";\nimport ReactPaginate from \"react-paginate\";\nimport classes from \"./Search.css\";\nimport Book from \"./Book/Book\";\nimport { Link } from \"react-router-dom\";\nimport * as actionTypes from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass Search extends Component {\n  state = {\n    searchingTerm: \"\",\n    noResult: false,\n    books: [],\n    start: true,\n    message: \"\",\n    pageNums: 0,\n  };\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    let books_from_red = this.props.books;\n    this.setState({ books: books_from_red });\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  setSearchingTerm = (value) => {\n    this.setState({ searchingTerm: value });\n    console.log(\"term: \", this.state.searchingTerm);\n  };\n\n  searchForBook = () => {\n    let term = this.state.searchingTerm;\n    this.setState({ start: false, message: \"wait...\" });\n    //str.replace(\"Microsoft\", \"W3Schools\");\n    term.replace(\" \", \"+\");\n    let url = \"http://openlibrary.org/search.json?q=\" + term + \"/\";\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(\"search->response: \", response);\n        if (response.data.docs.length == 0) {\n          console.log(\"array empty\");\n          this.setState({ noResult: true, message: \"NO RESULTS\" });\n        }\n        console.log(\"response: \", response.data.docs);\n        let array = response.data.docs.slice(0, 15);\n        let pgs = array.length / 10;\n        // if (array.length % 10 > 0) {\n        //   pgs++;\n        // }\n        //list.slice(0, size)\n        this.setState({ noResult: false, pageNums: pgs });\n        this.props.setBooks(array);\n      })\n      .catch((error) => {\n        console.log(\"search->error: \", error);\n        this.setState({ noResult: true });\n      });\n  };\n\n  render() {\n    let content = [];\n    return (\n      <div>\n        <br />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Insert title\"\n          variant=\"outlined\"\n          onChange={(event) => this.setSearchingTerm(event.target.value)}\n          value={this.state.searchingTerm}\n        >\n          Book\n        </TextField>\n        <br />\n        <button onClick={this.searchForBook}>Search</button>\n\n        {this.state.start ? (\n          <p>Wellcome! Please enter book title you want to find.</p>\n        ) : this.state.books.length != 0 ? (\n          <ol>\n            <p>Found books:</p>\n            <Paper>\n              {this.state.books.map((book) => {\n                console.log(\"book: \", book.title);\n                // <p>res:{book.title}</p>;\n                return (\n                  <Link to=\"/book\">\n                    <Card key={book.key} className={classes.Root}>\n                      <CardContent>\n                        <Typography\n                          className={classes.Title}\n                          color=\"textSecondary\"\n                          gutterBottom\n                        >\n                          First year of publish: {book.first_publish_year}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                          {book.title}\n                        </Typography>\n                        <Typography\n                          className={classes.pos}\n                          color=\"textSecondary\"\n                        >\n                          Type: {book.type}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                          <br />\n                          Author: {book.author_name}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                      </CardActions>\n                    </Card>\n                  </Link>\n                );\n\n                //content.push(b);\n              })}\n              {/* <ReactPaginate\n                pageCount={this.state.pageNums}\n                pageRangeDisplayed={5}\n                marginPagesDisplayed={this.state.pageNums}\n              /> */}\n            </Paper>\n          </ol>\n        ) : (\n          <p>{this.state.message}</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setBooks: (books) =>\n      dispatch({ type: actionTypes.SET_BOOKS, books: books }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}