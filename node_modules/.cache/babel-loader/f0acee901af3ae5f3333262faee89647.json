{"ast":null,"code":"var _jsxFileName = \"/Users/jelisavetacpajak/Documents/react-searchBooksApp/my-app/src/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Paper, Card, CardContent, Typography, CardActions, Button, TablePagination } from \"@material-ui/core\";\nimport ReactPaginate from \"react-paginate\";\nimport classes from \"./Search.css\";\nimport Book from \"./Book/Book\";\nimport { Link } from \"react-router-dom\";\nimport * as actionTypes from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchingTerm: \"\",\n      noResult: false,\n      books: [],\n      start: true,\n      message: \"\",\n      booksPerPage: 5,\n      currentPage: 1\n    };\n\n    this.setSearchingTerm = value => {\n      this.setState({\n        searchingTerm: value\n      }); //console.log(\"term: \", this.state.searchingTerm);\n    };\n\n    this.searchForBook = () => {\n      let term = this.state.searchingTerm;\n      this.setState({\n        start: false,\n        message: \"wait...\"\n      }); //str.replace(\"Microsoft\", \"W3Schools\");\n\n      term.replace(\" \", \"+\");\n      let url = \"http://openlibrary.org/search.json?q=\" + term + \"/\";\n      axios.get(url).then(response => {\n        console.log(\"search->response: \", response);\n\n        if (response.data.docs.length == 0) {\n          console.log(\"array empty\");\n          this.setState({\n            noResult: true,\n            message: \"NO RESULTS\"\n          });\n        }\n\n        console.log(\"response: \", response.data.docs);\n        let array = response.data.docs;\n        let pgs = array.length / 10; // if (array.length % 10 > 0) {\n        //   pgs++;\n        // }\n        //list.slice(0, size)\n\n        this.setState({\n          noResult: false,\n          pageNums: pgs\n        }); //get books for current 'page'\n\n        let indexOfLastBook = this.state.currentPage * this.state.booksPerPage;\n        let indexOfFirtsBook = indexOfLastBook - this.state.booksPerPage;\n        let currentBooks = array.slice(indexOfFirtsBook, indexOfLastBook);\n        this.props.setBooks(array);\n      }).catch(error => {\n        console.log(\"search->error: \", error);\n        this.setState({\n          noResult: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    if (this.props.books.length != 0) {\n      //let booksFromRed = this.props.books;\n      this.setState({\n        start: false\n      });\n    }\n\n    console.log(\"books from redux: \", this.props.books);\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  render() {\n    //get books for current 'page'\n    let indexOfLastBook = this.state.currentPage * this.state.booksPerPage;\n    let indexOfFirtsBook = indexOfLastBook - this.state.booksPerPage;\n    let currentBooks = null;\n\n    if (this.props.books.length != 0) {\n      currentBooks = this.props.books.slice(indexOfFirtsBook, indexOfLastBook);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Insert title\",\n        variant: \"outlined\",\n        onChange: event => this.setSearchingTerm(event.target.value),\n        value: this.state.searchingTerm,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.searchForBook,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), this.state.start ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Wellcome! Please enter book title you want to find.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : this.props.books.length != 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Found books:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), currentBooks.map(book => {\n          //console.log(\"book: \", book.title);\n          // <p>res:{book.title}</p>;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              color: \"#FFF\"\n            },\n            to: \"/book\",\n            onClick: () => this.props.setCurrentBook(book),\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.Root,\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"p\",\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this), \"Author: \", book.author_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.Button,\n                size: \"small\",\n                children: \"Learn More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)]\n            }, book.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, book.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this); //content.push(b);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    currentBook: state.currentBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setBooks: books => dispatch({\n      type: actionTypes.SET_BOOKS,\n      books: books\n    }),\n    setCurrentBook: book => dispatch({\n      type: actionTypes.SET_CURRENT_BOOK,\n      currentBook: book\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/jelisavetacpajak/Documents/react-searchBooksApp/my-app/src/Search/Search.js"],"names":["React","Component","axios","TextField","Paper","Card","CardContent","Typography","CardActions","Button","TablePagination","ReactPaginate","classes","Book","Link","actionTypes","connect","Search","state","searchingTerm","noResult","books","start","message","booksPerPage","currentPage","setSearchingTerm","value","setState","searchForBook","term","replace","url","get","then","response","console","log","data","docs","length","array","pgs","pageNums","indexOfLastBook","indexOfFirtsBook","currentBooks","slice","props","setBooks","catch","error","componentDidMount","componentDidUpdate","render","event","target","map","book","color","setCurrentBook","Root","title","author_name","key","mapStateToProps","currentBook","mapDispatchToProps","dispatch","type","SET_BOOKS","SET_CURRENT_BOOK"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,MAPF,EAQEC,eARF,QASO,mBATP;AAUA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,MAAN,SAAqBhB,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BiB,KAD6B,GACrB;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,IAJD;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,YAAY,EAAE,CANR;AAONC,MAAAA,WAAW,EAAE;AAPP,KADqB;;AAAA,SAuB7BC,gBAvB6B,GAuBTC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAAET,QAAAA,aAAa,EAAEQ;AAAjB,OAAd,EAD4B,CAE5B;AACD,KA1B4B;;AAAA,SA4B7BE,aA5B6B,GA4Bb,MAAM;AACpB,UAAIC,IAAI,GAAG,KAAKZ,KAAL,CAAWC,aAAtB;AACA,WAAKS,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAAd,EAFoB,CAGpB;;AACAO,MAAAA,IAAI,CAACC,OAAL,CAAa,GAAb,EAAkB,GAAlB;AACA,UAAIC,GAAG,GAAG,0CAA0CF,IAA1C,GAAiD,GAA3D;AACA5B,MAAAA,KAAK,CACF+B,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAlC;;AACA,YAAIA,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,IAA6B,CAAjC,EAAoC;AAClCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAKT,QAAL,CAAc;AAAER,YAAAA,QAAQ,EAAE,IAAZ;AAAkBG,YAAAA,OAAO,EAAE;AAA3B,WAAd;AACD;;AACDa,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACG,IAAT,CAAcC,IAAxC;AACA,YAAIE,KAAK,GAAGN,QAAQ,CAACG,IAAT,CAAcC,IAA1B;AACA,YAAIG,GAAG,GAAGD,KAAK,CAACD,MAAN,GAAe,EAAzB,CARkB,CASlB;AACA;AACA;AACA;;AACA,aAAKZ,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAE,KAAZ;AAAmBuB,UAAAA,QAAQ,EAAED;AAA7B,SAAd,EAbkB,CAclB;;AACA,YAAIE,eAAe,GAAG,KAAK1B,KAAL,CAAWO,WAAX,GAAyB,KAAKP,KAAL,CAAWM,YAA1D;AACA,YAAIqB,gBAAgB,GAAGD,eAAe,GAAG,KAAK1B,KAAL,CAAWM,YAApD;AAEA,YAAIsB,YAAY,GAAGL,KAAK,CAACM,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAAnB;AACA,aAAKI,KAAL,CAAWC,QAAX,CAAoBR,KAApB;AACD,OAtBH,EAuBGS,KAvBH,CAuBUC,KAAD,IAAW;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bc,KAA/B;AACA,aAAKvB,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OA1BH;AA2BD,KA7D4B;AAAA;;AAW7BgC,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,QAAI,KAAKW,KAAL,CAAW3B,KAAX,CAAiBmB,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;AACA,WAAKZ,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKW,KAAL,CAAW3B,KAA7C;AACD;;AACDgC,EAAAA,kBAAkB,GAAG;AACnBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;;AA0CDiB,EAAAA,MAAM,GAAG;AACP;AACA,QAAIV,eAAe,GAAG,KAAK1B,KAAL,CAAWO,WAAX,GAAyB,KAAKP,KAAL,CAAWM,YAA1D;AACA,QAAIqB,gBAAgB,GAAGD,eAAe,GAAG,KAAK1B,KAAL,CAAWM,YAApD;AACA,QAAIsB,YAAY,GAAG,IAAnB;;AACA,QAAI,KAAKE,KAAL,CAAW3B,KAAX,CAAiBmB,MAAjB,IAA2B,CAA/B,EAAkC;AAChCM,MAAAA,YAAY,GAAG,KAAKE,KAAL,CAAW3B,KAAX,CAAiB0B,KAAjB,CAAuBF,gBAAvB,EAAyCD,eAAzC,CAAf;AACD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,QAAQ,EAAGW,KAAD,IAAW,KAAK7B,gBAAL,CAAsB6B,KAAK,CAACC,MAAN,CAAa7B,KAAnC,CAJvB;AAKE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,aALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAQ,QAAA,OAAO,EAAE,KAAKU,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,EAcG,KAAKX,KAAL,CAAWI,KAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,KAAK0B,KAAL,CAAW3B,KAAX,CAAiBmB,MAAjB,IAA2B,CAA3B,gBACF,QAAC,KAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGM,YAAY,CAACW,GAAb,CAAkBC,IAAD,IAAU;AAC1B;AACA;AACA,8BACE,QAAC,IAAD;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,EAAE,EAAC,OAHL;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWY,cAAX,CAA0BF,IAA1B,CAJjB;AAAA,mCAME,QAAC,IAAD;AAAqB,cAAA,SAAS,EAAE9C,OAAO,CAACiD,IAAxC;AAAA,sCACE,QAAC,WAAD;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,SAAS,EAAC,IAAnC;AAAA,4BACGH,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,GAAtC;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA,0BADF,cAEWJ,IAAI,CAACK,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAEnD,OAAO,CAACH,MAA3B;AAAmC,gBAAA,IAAI,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAeE;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA,eAAWiD,IAAI,CAACM,GAAhB;AAAA;AAAA;AAAA;AAAA;AANF,aACON,IAAI,CAACM,GADZ;AAAA;AAAA;AAAA;AAAA,kBADF,CAH0B,CA8B1B;AACD,SA/BA,CAFH,eAkCE;AAAA;AAAA;AAAA;AAAA,gBAlCF,eAmCE;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,gBAuCF;AAAA,kBAAI,KAAK9C,KAAL,CAAWK;AAAf;AAAA;AAAA;AAAA;AAAA,cAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4DD;;AAnI4B;;AAsI/B,MAAM0C,eAAe,GAAI/C,KAAD,IAAW;AACjC,SAAO;AACLG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAEL6C,IAAAA,WAAW,EAAEhD,KAAK,CAACgD;AAFd,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,QAAQ,EAAG5B,KAAD,IACR+C,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtD,WAAW,CAACuD,SAApB;AAA+BjD,MAAAA,KAAK,EAAEA;AAAtC,KAAD,CAFL;AAGLuC,IAAAA,cAAc,EAAGF,IAAD,IACdU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtD,WAAW,CAACwD,gBAApB;AAAsCL,MAAAA,WAAW,EAAER;AAAnD,KAAD;AAJL,GAAP;AAMD,CAPD;;AASA,eAAe1C,OAAO,CAACiD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClD,MAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  Paper,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  TablePagination,\n} from \"@material-ui/core\";\nimport ReactPaginate from \"react-paginate\";\nimport classes from \"./Search.css\";\nimport Book from \"./Book/Book\";\nimport { Link } from \"react-router-dom\";\nimport * as actionTypes from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass Search extends Component {\n  state = {\n    searchingTerm: \"\",\n    noResult: false,\n    books: [],\n    start: true,\n    message: \"\",\n    booksPerPage: 5,\n    currentPage: 1,\n  };\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    if (this.props.books.length != 0) {\n      //let booksFromRed = this.props.books;\n      this.setState({ start: false });\n    }\n    console.log(\"books from redux: \", this.props.books);\n  }\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n  }\n\n  setSearchingTerm = (value) => {\n    this.setState({ searchingTerm: value });\n    //console.log(\"term: \", this.state.searchingTerm);\n  };\n\n  searchForBook = () => {\n    let term = this.state.searchingTerm;\n    this.setState({ start: false, message: \"wait...\" });\n    //str.replace(\"Microsoft\", \"W3Schools\");\n    term.replace(\" \", \"+\");\n    let url = \"http://openlibrary.org/search.json?q=\" + term + \"/\";\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(\"search->response: \", response);\n        if (response.data.docs.length == 0) {\n          console.log(\"array empty\");\n          this.setState({ noResult: true, message: \"NO RESULTS\" });\n        }\n        console.log(\"response: \", response.data.docs);\n        let array = response.data.docs;\n        let pgs = array.length / 10;\n        // if (array.length % 10 > 0) {\n        //   pgs++;\n        // }\n        //list.slice(0, size)\n        this.setState({ noResult: false, pageNums: pgs });\n        //get books for current 'page'\n        let indexOfLastBook = this.state.currentPage * this.state.booksPerPage;\n        let indexOfFirtsBook = indexOfLastBook - this.state.booksPerPage;\n\n        let currentBooks = array.slice(indexOfFirtsBook, indexOfLastBook);\n        this.props.setBooks(array);\n      })\n      .catch((error) => {\n        console.log(\"search->error: \", error);\n        this.setState({ noResult: true });\n      });\n  };\n\n  render() {\n    //get books for current 'page'\n    let indexOfLastBook = this.state.currentPage * this.state.booksPerPage;\n    let indexOfFirtsBook = indexOfLastBook - this.state.booksPerPage;\n    let currentBooks = null;\n    if (this.props.books.length != 0) {\n      currentBooks = this.props.books.slice(indexOfFirtsBook, indexOfLastBook);\n    }\n    return (\n      <div>\n        <br />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Insert title\"\n          variant=\"outlined\"\n          onChange={(event) => this.setSearchingTerm(event.target.value)}\n          value={this.state.searchingTerm}\n        >\n          Book\n        </TextField>\n        <br />\n        <button onClick={this.searchForBook}>Search</button>\n\n        {this.state.start ? (\n          <p>Wellcome! Please enter book title you want to find.</p>\n        ) : this.props.books.length != 0 ? (\n          <Paper>\n            <p>Found books:</p>\n            {currentBooks.map((book) => {\n              //console.log(\"book: \", book.title);\n              // <p>res:{book.title}</p>;\n              return (\n                <Link\n                  key={book.key}\n                  style={{ color: \"#FFF\" }}\n                  to=\"/book\"\n                  onClick={() => this.props.setCurrentBook(book)}\n                >\n                  <Card key={book.key} className={classes.Root}>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {book.title}\n                      </Typography>\n\n                      <Typography variant=\"body2\" component=\"p\">\n                        <br />\n                        Author: {book.author_name}\n                      </Typography>\n                    </CardContent>\n\n                    <Button className={classes.Button} size=\"small\">\n                      Learn More\n                    </Button>\n                    <br />\n                  </Card>\n                </Link>\n              );\n\n              //content.push(b);\n            })}\n            <br />\n            <br />\n          </Paper>\n        ) : (\n          <p>{this.state.message}</p>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books,\n    currentBook: state.currentBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setBooks: (books) =>\n      dispatch({ type: actionTypes.SET_BOOKS, books: books }),\n    setCurrentBook: (book) =>\n      dispatch({ type: actionTypes.SET_CURRENT_BOOK, currentBook: book }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}